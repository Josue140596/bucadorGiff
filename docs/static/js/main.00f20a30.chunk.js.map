{"version":3,"sources":["components/AddCategory.js","components/GiffGridItem.js","helpers/getGifs.js","components/GigGrid.js","hooks/useFetchGifs.js","GiffExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","cate","div","document","querySelector","div2","getElementsByClassName","removeChild","preventDefault","type","value","onChange","target","GiffGridItem","img","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","GigGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GiffExpertApp","categories","ReactDOM","render","getElementById"],"mappings":"+MA8CeA,EA3CK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EACAC,mBAAS,IADT,mBAC5BC,EAD4B,KAChBC,EADgB,KAuBnC,OAEK,0BAAMC,SApBS,SAACC,GACjB,GAAGH,EAAWI,OAAOC,OAAS,EAAE,CAE5BP,GAAc,SAAAQ,GAAI,OAAIN,GAAJ,mBAAmBM,OACrCL,EAAc,IAClB,IAAIM,EAAMC,SAASC,cAAc,YAC7BC,EAAOF,SAASG,uBAAuB,aAEpB,MAAXD,EAAK,IAELH,EAAIK,YAAYF,EAAK,IAKjCP,EAAEU,mBAME,2BACIC,KAAK,OACLC,MAAOf,EACPgB,SA3BO,SAACb,GAChBF,EAAcE,EAAEc,OAAOF,YCgBhBG,EAlBI,SAACC,GAIhB,OACI,oCACA,yBAAKC,UAAU,2CAEX,yBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,W,uBCX3BC,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACZL,EADY,iDACqCM,UAAWF,GADhD,+DAECG,MAAMP,GAFP,cAEZQ,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAI,SAAAf,GAClB,MAAO,CACHgB,GAAIhB,EAAIgB,GACRX,MAAOL,EAAIK,MACXF,IAAKH,EAAIiB,OAAOC,iBAAiBf,QARvB,kBAaXW,GAbW,4CAAF,sDC8DLK,EAzDC,SAAC,GAAc,IAAD,ECFH,SAACZ,GAAY,IAAD,EACR3B,mBAAS,CAChCiC,KAAM,GACNO,SAAS,IAHsB,mBAC3BC,EAD2B,KACpBC,EADoB,KAsBnC,OAhBAC,qBAAU,WAGFjB,EAAQC,GACXiB,MAAK,SAAAxB,GACFsB,EAAS,CACLT,KAAMb,EACNoB,SAAQ,SAOjB,CAACb,IAEGc,EDjBuBI,CAHJ,EAAZlB,UAGFU,EAHc,EAGnBJ,KAAYO,EAHO,EAGPA,QAiCnB,OACG,oCACEA,GAAW,yBAAKnB,UAAU,cAG3B,yBAAKA,UAAU,aACdgB,EAAOF,KAAI,SAAAf,GAIR,OAAO,kBAAC,EAAD,eAAc0B,IAAK1B,EAAIgB,IAAQhB,UEbnC2B,EAlCK,WAEhB,IAFoB,EAIgB/C,mBAFb,CAAC,SAFJ,mBAIbgD,EAJa,KAIDjD,EAJC,KAcpB,OACI,oCACA,wBAAIsB,UAAU,SAAd,kBACA,kBAAC,EAAD,CAActB,cAAeA,IAC7B,6BAEA,wBAAIsB,UAAU,WAEN2B,EAAWb,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CAASmB,IAAKnB,EACLA,SAAUA,UCtBvCsB,IAASC,OAAO,kBAAC,EAAD,MAAkBzC,SAAS0C,eAAe,U","file":"static/js/main.00f20a30.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories})=>{\r\n    const [inputValue, setInputValue]= useState('');\r\n    const handleInput =(e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategories(cate =>[inputValue, ...cate ]);\r\n            setInputValue('');\r\n        let div = document.querySelector('.content');\r\n        let div2 = document.getElementsByClassName('card-grid');\r\n            \r\n                if (div2[1] != null) {\r\n                    \r\n                    div.removeChild(div2[1])      \r\n                }\r\n        }\r\n      \r\n       \r\n        e.preventDefault();\r\n    }\r\n\r\n    return(\r\n    \r\n         <form onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInput}\r\n            />\r\n         </form>   \r\n        \r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\nexport default AddCategory;","import React from 'react'\r\n\r\n\r\n\r\nconst GiffGridItem=(img)=>{\r\n   \r\n    \r\n   \r\n    return(\r\n        <>\r\n        <div className='card animate__animated animate__bounce '>\r\n            \r\n            <img src={img.url} alt={img.title}/>\r\n           \r\n        </div>\r\n        \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default GiffGridItem;","\r\nexport const getGifs =async( category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=qMGCLlaRbATaBYbS92Zll87PEirgaML3`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   \r\n    return gifs\r\n    \r\n}","import React from 'react';\r\nimport GiffGridItem from './GiffGridItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nconst GigGrid = ({category})=>{\r\n\r\n \r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    // useEffect( ()=>{\r\n    //     getGifs(category)\r\n    //         .then(img=> setImages(img))\r\n    // }, [ category ])\r\n\r\n\r\n    // EstÃ¡ la pusimos en una funcion \"'\"'helpers'\"'\"\r\n    // const getGifs =async()=>{\r\n    //     const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=qMGCLlaRbATaBYbS92Zll87PEirgaML3`\r\n    //     const resp = await fetch(url);\r\n    //     const {data} = await resp.json();\r\n    //     const gifs = data.map(img=>{\r\n    //         return {\r\n    //             id: img.id,\r\n    //             title: img.title,\r\n    //             url: img.images.downsized_medium.url\r\n    //         }\r\n    //     })\r\n\r\n       \r\n    //     setImages(gifs);\r\n        \r\n    // }\r\n  \r\n   \r\n  \r\n\r\n     \r\n   \r\n   \r\n  \r\n    return(\r\n       <>\r\n        {loading && <div className='preloader'></div>}\r\n        \r\n        \r\n        <div className='card-grid'>\r\n        {images.map(img=>{\r\n            \r\n        \r\n\r\n            return(<GiffGridItem key={img.id} {...img} />) \r\n        \r\n            })}\r\n            \r\n            </div>\r\n          \r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GigGrid;","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs =(category)=>{\r\n    const [ state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n       \r\n            getGifs(category)\r\n        .then(img=>{\r\n            setState({\r\n                data: img,\r\n                loading:false\r\n            });\r\n        })\r\n            \r\n       \r\n        \r\n        \r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GigGrid from './components/GigGrid';\r\n\r\n\r\nconst GiffExpertApp=()=>{\r\n\r\n    const categoriesList = ['HOLA'];\r\n\r\n    const [categories, setCategories] = useState(categoriesList);\r\n    // const handleAdd =()=>{\r\n    //     // setCategories(categories.concat('PokemonGo') )\r\n        \r\n        \r\n    //     setCategories([...categories, 'PokemonGo'] )\r\n        \r\n    // }\r\n\r\n\r\n    return(\r\n        <>\r\n        <h2 className='Title'>Buscador Giff </h2>\r\n        <AddCategory  setCategories={setCategories}/>\r\n        <hr></hr>\r\n        \r\n        <ol className='content'>\r\n            {\r\n                categories.map(category=>\r\n                    <GigGrid key={category}\r\n                             category={category}            \r\n                    />\r\n                    )\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GiffExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiffExpertApp from './GiffExpertApp';\n// import App from './App';\n\n\nReactDOM.render(<GiffExpertApp/>, document.getElementById('root'));\n\n"],"sourceRoot":""}